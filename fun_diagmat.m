function [sys_mat] = fun_diagmat()
% Ссылки на формулы и страницы даны по книге Kundur P. "Power Systems 
% Stability and Control". – New York: McGraw-Hill, Inc., 1994.

% 1. Загружаем исходные данные
clear all
init_data = id4mac();

% 2. Вычисляем матрицу проводимостей для сети из 6-ти узлов
admit_mat = fadmit_mat(init_data.line);

% 3. Вычисляем установившиеся значения напряжений, мощностей и токов в узлах
power_flow = fpower_flow(init_data.power_flow,admit_mat.Y_cmplx_l);

% 4. Вычисляем матрицы коэффициентов Тейлора

% 4.1. Матрицы генераторов A_G(i), A_G(i)_2, B_G(i), B_G(i)_2,
%                          C_G(i), C_G(i)_2, D_G(i), H_G(i), S_G(i)
bilin_gen = fbilin_gen (init_data.machine,power_flow);

% 4.2. Матрицы нагрузок D_L(i)
% m - коэффициент активной составляющей нагрузки (см. 12.199, с.797 Кундур)
% n - коэффициент реактивной составляющей нагрузки(см. 12.199, с.797 Кундур)

% см. с. 797-798 Кундур:
% m = 0(n = 0) -    constant MVA characteristic for active (reactive)
%                   component of load
% m = 1(n = 1) -    constant current characteristic for active (reactive)
%                   component of load
% m = 2(n = 2) -    constant impedance characteristic for active (reactive)
%                   component of load
m = 1; n = 2; % с.814(a) Кундур
lin_load = flin_load (init_data.machine.n_gen,init_data.power_flow.n_load,...
    power_flow,n,m);
clear m n

% 5. Компоновка диагональных матриц системы (Ad, Bd, Cd, Dd) и матрицы B1
% входов
sys_mat = fsys_mat(init_data.machine.n_gen, init_data.power_flow.n_load,...
    bilin_gen,lin_load);

sys_mat.Y = admit_mat.Y_m;
end
%%                             ФУНКЦИИ
%=========================ADMITTANCE MATRIX================================
function [admit_mat] = fadmit_mat(data_line)

r = data_line.r;
x_L = data_line.x_L;
b_C = data_line.b_C;
r_transf_m = data_line.r_transf_m;

% Полное удельное сопротивление линии [p.u. / km] в системе линий 100MVA/230 kV
R_line = r + x_L * 1i;

% Перевод сопротивления трансформатора из системы машин 900MVA/230kV в
% систему линий 100MVA/230kV:

r_transf_line = r_transf_m * 100 / 900;

% Вычисление проводимостей элементов 11-ти узловой сети:

Y_11bus.Y11 = 1 / r_transf_line;
Y_11bus.Y15 = - Y_11bus.Y11;
Y_11bus.Y22 = Y_11bus.Y11;
Y_11bus.Y26 = Y_11bus.Y15;
Y_11bus.Y33 = Y_11bus.Y11;
Y_11bus.Y3_11 = Y_11bus.Y15;
Y_11bus.Y44 = Y_11bus.Y11;
Y_11bus.Y4_10 = Y_11bus.Y15;
Y_11bus.Y51 = Y_11bus.Y15;
Y_11bus.Y55 = 1 / r_transf_line + ...
    1 / (25 * R_line);
Y_11bus.Y56 = - 1 / (25 * R_line);
Y_11bus.Y62 = Y_11bus.Y26;
Y_11bus.Y65 = Y_11bus.Y56;
Y_11bus.Y66 = 1 / r_transf_line + ...
    1 / (25 * R_line) + 1 / (10 * R_line);
Y_11bus.Y67 = - 1 / (10 * R_line);
Y_11bus.Y76 = Y_11bus.Y67;
Y_11bus.Y77 = 1 / (10 * R_line) + ...
    2 * (1 / (110 * R_line) + b_C * 110 / 2);
Y_11bus.Y78 = - 2 / (110 * R_line);
Y_11bus.Y87 = Y_11bus.Y78;
Y_11bus.Y88 = 4 * (1 / (110 * R_line) ...
    + b_C * 110 / 2);
Y_11bus.Y89 = Y_11bus.Y78;
Y_11bus.Y98 = Y_11bus.Y89;
Y_11bus.Y99 = Y_11bus.Y77;
Y_11bus.Y9_10 = Y_11bus.Y76;
Y_11bus.Y10_4 = Y_11bus.Y4_10;
Y_11bus.Y10_9 = Y_11bus.Y9_10;
Y_11bus.Y10_10 = Y_11bus.Y66;
Y_11bus.Y10_11 = Y_11bus.Y65;
Y_11bus.Y11_3 = Y_11bus.Y3_11;
Y_11bus.Y11_10 = Y_11bus.Y10_11;
Y_11bus.Y11_11 = Y_11bus.Y55;

% Вычисление проводимостей элементов 6-ти узловой сети:

tmp_12 = Y_11bus.Y55 * Y_11bus.Y66 - Y_11bus.Y56...
    * Y_11bus.Y65;
tmp_34 = Y_11bus.Y10_10 * Y_11bus.Y11_11 ...
    - Y_11bus.Y10_11 * Y_11bus.Y11_10;

Y_6bus.Y11 = Y_11bus.Y11 - (Y_11bus.Y15...
    * Y_11bus.Y51 * Y_11bus.Y66) / tmp_12;
Y_6bus.Y12 = Y_11bus.Y15 * Y_11bus.Y62 ...
    * Y_11bus.Y56 / tmp_12;
Y_6bus.Y15 = Y_11bus.Y15 * Y_11bus.Y56 ...
    * Y_11bus.Y67 / tmp_12;
Y_6bus.Y21 = Y_6bus.Y12;
Y_6bus.Y22 = Y_11bus.Y22 - (Y_11bus.Y26 ...
    * Y_11bus.Y62 * Y_11bus.Y55) / tmp_12;
Y_6bus.Y25 = -Y_11bus.Y26 * Y_11bus.Y55 ...
    * Y_11bus.Y67 / tmp_12;
Y_6bus.Y33 = Y_11bus.Y33 - (Y_11bus.Y11_3 ...
    * Y_11bus.Y3_11 * Y_11bus.Y10_10) / tmp_34;
Y_6bus.Y34 = Y_11bus.Y10_4 * Y_11bus.Y3_11 ...
    * Y_11bus.Y11_10 / tmp_34;
Y_6bus.Y36 = Y_11bus.Y3_11 * Y_11bus.Y10_9 ...
    * Y_11bus.Y11_10 / tmp_34;
Y_6bus.Y43 = Y_6bus.Y34;
Y_6bus.Y44 = Y_11bus.Y44 - (Y_11bus.Y10_4 ...
    * Y_11bus.Y4_10 * Y_11bus.Y11_11) / tmp_34;
Y_6bus.Y46 = -Y_11bus.Y4_10 * Y_11bus.Y10_9 ...
    * Y_11bus.Y11_11 / tmp_34;
Y_6bus.Y51 = Y_6bus.Y15;
Y_6bus.Y52 = Y_6bus.Y25;
Y_6bus.Y55 = Y_11bus.Y77 - (Y_11bus.Y78...
    * Y_11bus.Y87 / Y_11bus.Y88) - (Y_11bus.Y55...
    * Y_11bus.Y67 * Y_11bus.Y76 / tmp_12);
Y_6bus.Y56 = - Y_11bus.Y78 * Y_11bus.Y89 ...
    / Y_11bus.Y88;
Y_6bus.Y63 = Y_6bus.Y36;
Y_6bus.Y64 = Y_6bus.Y46;
Y_6bus.Y65 = Y_6bus.Y56;
Y_6bus.Y66 = Y_11bus.Y99 - (Y_11bus.Y89...
    * Y_11bus.Y98 / Y_11bus.Y88) - (Y_11bus.Y10_9...
    * Y_11bus.Y9_10 * Y_11bus.Y11_11 / tmp_34);

% Матрица проводимости для сети из 6-ти узлов в комплексном виде в системе
% относительных единиц линий:
Y_cmplx_l = [Y_6bus.Y11 Y_6bus.Y12 0 0 Y_6bus.Y15 0;
        Y_6bus.Y21 Y_6bus.Y22 0 0 Y_6bus.Y25 0;
        0 0 Y_6bus.Y33 Y_6bus.Y34 0 Y_6bus.Y36;
        0 0 Y_6bus.Y43 Y_6bus.Y44 0 Y_6bus.Y46;
        Y_6bus.Y51 Y_6bus.Y52 0 0 Y_6bus.Y55...
        Y_6bus.Y56;
        0 0 Y_6bus.Y63 Y_6bus.Y64 Y_6bus.Y65...
        Y_6bus.Y66];
    
% Матрица Y_cmplx_l с действительными компонентами (в системе линий):
for i=1:6                
 for j=1:6
   Y_l(2*i-1, 2*j-1) = real(Y_cmplx_l(i,j));
   Y_l(2*i-1, 2*j) = -imag(Y_cmplx_l(i,j));
   Y_l(2*i, 2*j-1) = imag(Y_cmplx_l(i,j));
   Y_l(2*i, 2*j) = real(Y_cmplx_l(i,j));
 end
end

% Матрица проводимости с действительными компонентами в системе машин:
Y_m = Y_l * 1/9;

admit_mat.Y_cmplx_l = Y_cmplx_l;
admit_mat.Y_l = Y_l;
admit_mat.Y_m = Y_m;
end
%=======================END of ADMITTANCE MATRIX===========================


%========================POWER FLOW ANALYSIS===============================
function [power_flow] = fpower_flow(mac_dat, Y)
% Количество шагов итерационной процедуры:
val_step = 1000000;

% Номер slack bus:
N_sb = 3; % код не допускает изменения номера шины

% Стартовые данные итерационной процедуры:
P = [mac_dat.P;-mac_dat.P_load] / 100; % Активная мощность в узлах 1 - 6
                                      % в относительных единицах системы 
                                      % линий 100MVA/230kV
P(N_sb) = 0; % начальная активная мощность на slack bus
Q = zeros(6,val_step); % Реактивная мощность в узлах 1-6
Q(5,:) = mac_dat.Q_load(1) / 100; % заданная реактивная мощность нагрузки
                                  % в узле № 7 в системе линий 100MVA/230kV
Q(6,:) = mac_dat.Q_load(2) / 100; % заданная реактивная мощность нагрузки
                                  % в узле № 9 в системе линий 100MVA/230kV
V_rect_l = zeros(6,val_step);
V_rect_l (1:4,1) = mac_dat.absE; % заданные амплитуды напряжений в 
                                 % генераторных узлах 1-4 в относительных
                                 % единицах системы линий 100MVA/230kV
V_rect_l(N_sb,:) = mac_dat.absE(N_sb) * exp(mac_dat.angE(N_sb)...
    * 1i * pi / 180); % комплексное напряжение на slack bus в относительных
                      % единицах системы линий 100MVA/230kV
V_rect_l (5:6,1) = 1; % начальные значения напряжений в нагрузочных узлах 
                      % № 7,9 в pu системы линий 100MVA/230kV

% Итерационная процедура:
for iter = 1:val_step-1
    % Напряжение в узле № 9:
    V_rect_l(6,iter + 1) = - 1 / Y(6,6) ...
    * (V_rect_l(3,iter) * Y(6,3) + V_rect_l(4,iter) * Y(6,4) ...
    + V_rect_l(5,iter) * Y(6,5) - (P(6) - Q(6,iter) * 1i) ...
    / conj(V_rect_l(6,iter)));

    % Напряжение в узле № 7:
    V_rect_l(5,iter + 1) = - 1 / Y(5,5) ...
    * (V_rect_l(1,iter) * Y(5,1) + V_rect_l(2,iter) * Y(5,2) ...
    + V_rect_l(6,iter+1) * Y(5,6) - (P(5) - Q(5,iter) * 1i) ...
    / conj(V_rect_l(5,iter)));

    % Узел № 4:
    % Реактивная мощность:
    Q(4,iter+1) = - imag(conj(V_rect_l(4,iter)) * (V_rect_l(3,iter) * Y(4,3) ...
        + V_rect_l(4,iter) * Y(4,4) + V_rect_l(6,iter+1) * Y(4,6)));
    
    % Напряжение:
    V_rect_l(4,iter + 1) = - 1 / Y(4,4) ...
    * (V_rect_l(3,iter) * Y(4,3) + V_rect_l(6,iter+1) * Y(4,6) ...
    - (P(4) - Q(4,iter+1) * 1i) / conj(V_rect_l(4,iter)));

    % Действительная часть напряжения:
    Re_V4 = sqrt (V_rect_l(4,1)^2 - imag(V_rect_l(4,iter + 1))^2);
    % Напряжение с модулем V_rect_l(4,1):
    V_rect_l(4,iter + 1) = Re_V4 + imag(V_rect_l(4,iter + 1)) * 1i;
    
    % Узел № 2:
    % Реактивная мощность:
    Q(2,iter+1) = - imag(conj(V_rect_l(2,iter)) * (V_rect_l(1,iter) * Y(2,1) ...
        + V_rect_l(2,iter) * Y(2,2) + V_rect_l(5,iter+1) * Y(2,5)));
    
    % Напряжение:
    V_rect_l(2,iter + 1) = - 1 / Y(2,2) ...
    * (V_rect_l(1,iter) * Y(2,1) + V_rect_l(5,iter+1) * Y(2,5) ...
    - (P(2) - Q(2,iter+1) * 1i) / conj(V_rect_l(2,iter)));

    % Действительная часть напряжения:
    Re_V2 = sqrt (V_rect_l(2,1)^2 - imag(V_rect_l(2,iter + 1))^2);
    % Напряжение с модулем V_rect_l(2,1):
    V_rect_l(2,iter + 1) = Re_V2 + imag(V_rect_l(2,iter + 1)) * 1i;
    
    % Узел № 1:
    % Реактивная мощность:
    Q(1,iter+1) = - imag(conj(V_rect_l(1,iter)) * (V_rect_l(1,iter) * Y(1,1) ...
        + V_rect_l(2,iter+1) * Y(1,2) + V_rect_l(5,iter+1) * Y(1,5)));
    
    % Напряжение:
    V_rect_l(1,iter + 1) = - 1 / Y(1,1) ...
    * (V_rect_l(2,iter+1) * Y(1,2) + V_rect_l(5,iter+1) * Y(1,5) ...
    - (P(1) - Q(1,iter+1) * 1i) / conj(V_rect_l(1,iter)));

    % Действительная часть напряжения:
    Re_V1 = sqrt (V_rect_l(1,1)^2 - imag(V_rect_l(1,iter + 1))^2);
    % Напряжение с модулем V_rect_l(1,1):
    V_rect_l(1,iter + 1) = Re_V1 + imag(V_rect_l(1,iter + 1)) * 1i;
end

% Мощности в узле № 3 (slack bus):
P(3) = real(conj(V_rect_l(3,end)) * (Y (3,:) * V_rect_l(:,end)));
Q(3,end) = -imag(conj(V_rect_l(3,end)) * (Y (3,:) * V_rect_l(:,end)));

% Установившиеся значения мощностей, напряжений и токов (в системе линий 100MVA/230kV):
P0_l = P;
Q0_l = Q(:,end);
V0_l = V_rect_l(:,end);
I0_l = (P0_l - Q0_l * 1i) ./ conj(V0_l);

% Проверка правильности расчёта power flow:
delta = I0_l - Y * V0_l(:,end); % Разница между левой и правой частью уравнений сети
angEt = rad2deg(angle(V0_l)); % Фазы напряжений на генераторных шинах

power_flow.P0_l = P0_l;
power_flow.Q0_l = Q0_l;
power_flow.V0_l = V0_l;
power_flow.I0_l = I0_l;
power_flow.delta = delta;
power_flow.angEt = angEt;
end
%======================END of POWER FLOW ANALYSIS==========================


%========================BILINEARIZE of GENERATOR==========================
function [bilin_gen] = fbilin_gen(mac_dat,power_flow)

n_gen = mac_dat.n_gen;
bilin_gen = struct;

for ngen = 1:n_gen

    name_field = string(['G' num2str(ngen)]);

    % Исходные нерасчётные данные в системе машин 900MVA/20kV
    omega_0 = mac_dat.omega_0(ngen);
    X_d = mac_dat.X_d (ngen);
    X_d_ht = mac_dat.X_d_ht(ngen);
    X_d_2ht = mac_dat.X_d_2ht(ngen);
    X_q = mac_dat.X_q(ngen);
    X_q_ht = mac_dat.X_q_ht(ngen);
    X_q_2ht = mac_dat.X_q_2ht(ngen);
    T_d0_ht = mac_dat.T_d0_ht(ngen);
    T_d0_2ht = mac_dat.T_d0_2ht(ngen);
    T_q0_ht = mac_dat.T_q0_ht(ngen);
    T_q0_2ht = mac_dat.T_q0_2ht(ngen);
    R_a = mac_dat.R_a(ngen);
    X_l = mac_dat.X_l(ngen);
    A_Sat = mac_dat.A_Sat(ngen);
    B_Sat = mac_dat.B_Sat(ngen);
    psi_TI = mac_dat.psi_TI(ngen);
    H = mac_dat.H(ngen);
    K_D = mac_dat.K_D(ngen);

    % Установившиеся значения мощностей и напряжений в системе линий:
    P = power_flow.P0_l(ngen); % активная мощность
    Q = power_flow.Q0_l(ngen); % реактивная мощность
    E_t_tild = power_flow.V0_l(ngen); % комплексное напряжение
    E_t = abs(E_t_tild); % амплитуда терминального напряжения в системе машин

    % Определяем индуктивности (предполагается, что в системе относительных
    % едениц индуктивность равна реактивному сопротивлению,X_index = L_index):
    L_d = X_d;  L_d_ht = X_d_ht;    L_d_2ht = X_d_2ht;
    L_q = X_q;  L_q_ht = X_q_ht;    L_q_2ht = X_q_2ht;
    L_l = X_l;

    % unsaturated mutual inductances (Example 4.1, p.154):
    L_ad = L_d - L_l;
    L_aq = L_q - L_l;

    % field winding inductance (Example 4.1, p.154):
    L_fd = L_ad*(L_d_ht - L_l)/(L_ad - L_d_ht + L_l);

    % damping windings inductance (Example 4.1, p.154):
    L_1q = L_aq*(L_q_ht - L_l)/(L_aq - L_q_ht + L_l);
    L_1d = -L_ad * L_fd * (L_l - L_d_2ht) / (L_ad * L_fd + L_ad * L_l - ...
        L_ad * L_d_2ht + L_fd * L_l - L_fd * L_d_2ht);
    L_2q = -L_aq * L_1q * (L_l - L_q_2ht)/(L_1q * L_aq + L_1q * L_l -...
        L_1q * L_q_2ht + L_aq * L_l - L_aq * L_q_2ht);

    % rotor windings inductance (Example 4.1, p.154):
    R_fd = (L_ad + L_fd) / (T_d0_ht * omega_0);
    R_1d = (L_1d + (L_ad * L_fd) / (L_ad + L_fd)) / (T_d0_2ht * omega_0);
    R_1q = (L_aq + L_1q) / (T_q0_ht * omega_0);
    R_2q = (L_2q + (L_aq * L_1q) / (L_aq + L_1q)) / (T_q0_2ht * omega_0);

    % total saturation factors K_sd, K_sq (Section 3.8, p.114):
    I_t_tild = conj(P + Q * 1i) / conj(E_t_tild); %p.733
    I_t_tild = I_t_tild* 1/9;
    
    E_a_tild = E_t_tild + (R_a + X_l * 1i) * I_t_tild; %eq.3.194, p.116
    psi_at = abs(E_a_tild);
    if psi_at <= psi_TI
        psi_I = 0; %eq.3.188, p.116
    else
        psi_I = A_Sat * exp(B_Sat * (psi_at-psi_TI)); %eq.3.189, p.116
    end
    K_sd = psi_at / (psi_at + psi_I); %eq.3.187, p.116
    K_sq = K_sd;

    % Параметры рабочей точки с. 746:
    % saturated values of synchronous reactances & inductances:
    X_ds = K_sd * L_ad + L_l;
    X_qs = K_sq * L_aq + L_l;
    L_ds = X_ds;
    L_qs = X_qs;

    % terminal current & power factor angle:
    I_t = abs(I_t_tild');
    f = angle(E_t_tild) - angle(I_t_tild);% (angle(I_t_tild'));

    % internal angle:
    delta_i = rad2deg (atan((I_t * X_qs * cos((f)) -...
        I_t * R_a * sin((f))) / (E_t + I_t * R_a * cos((f))...
        + I_t * X_qs * sin((f)))));

    % rotor voltages & currents:
    e_d0 = E_t * sin (deg2rad(delta_i));
    e_q0 = E_t * cos (deg2rad(delta_i));
    i_d0 = I_t * sin (deg2rad(delta_i) + f);
    i_q0 = I_t * cos (deg2rad(delta_i) + f);

    % bus voltage:
    E_re0 = real (E_t_tild);
    E_im0 = imag (E_t_tild);

    % rotor angle:
    delta_0 = delta_i + rad2deg(atan(E_im0 / E_re0));

    % field winding current & voltage:
    i_fd0 = (e_q0 + R_a * i_q0 + L_ds * i_d0) / (K_sd * L_ad);
    E_fd0 = L_ad * i_fd0;

    % mutual flux linkage:
    psi_ad0 = K_sd * L_ad * (-i_d0 + i_fd0);
    psi_aq0 = - K_sq * L_aq * i_q0;
    psi_fd0 = i_fd0 * L_fd;
    %psi_fd0 = (K_sd * L_ad + L_fd) * i_fd0 - K_sd * L_ad * i_d0;% с.104
    %psi_1d0 = K_sd * L_ad * (i_fd0 - i_d0);% с.104
    %psi_1q0 = -K_sq * L_aq * i_q0;% с.104
    %psi_2q0 = -K_sq * L_aq * i_q0;% с.104

    % Дополнительное насыщение (с.745)
    psi_at0 = psi_at;
    % incremental saturation factor:
    K_sd_incr = 1 / (1 + B_Sat * A_Sat * exp(B_Sat * (psi_at0 - psi_TI)));
    K_sq_incr = K_sd_incr;

    % incremental saturated values of the mutual inductances:
    L_ads = K_sd_incr * L_ad;
    L_aqs = K_sq_incr * L_aq;

    % Коэффициенты a_ij

    % Пересчитываем индуктивности с учётом доп. насыщения:
    L_ads_2ht = 1 / (1 / L_ads + 1 / L_fd + 1 / L_1d);
    L_aqs_2ht = 1 / (1 / L_aqs + 1 / L_1q + 1 / L_2q);
    
    % Вычисляем параметры рабочей точки с учётом L_ads_2ht и L_aqs_2ht:
    psi_1d0 = (psi_ad0 / L_ads_2ht + i_d0 - psi_fd0/L_fd) * L_1d;
    psi_1q0 = (psi_aq0 / L_aqs_2ht + i_q0) * L_1q * L_2q / (L_1q + L_2q);
    psi_2q0 = psi_1q0;
    
    delta_0r = deg2rad(delta_0);

% Линейные коэффициенты:
    a_11 = - K_D / (2 * H);

    a_12 = ((L_ads_2ht - L_aqs_2ht)*L_1d*L_2q*(((E_im0^2 - E_re0^2)* ...
    L_aqs_2ht + (E_im0^2 - E_re0^2)*L_l + 2*E_im0*E_re0*R_a)*L_ads_2ht + ...
    ((E_im0^2 - E_re0^2)*L_l + 2*E_im0*E_re0*R_a)*L_aqs_2ht + (E_im0^2 - ...
    E_re0^2)*L_l^2 + 4*E_im0*E_re0*L_l*R_a + (-E_im0^2 + E_re0^2)*R_a^2)* ...
    L_1q*L_fd*cos(delta_0r)^2 + (2*(L_ads_2ht - L_aqs_2ht)*L_1d*L_2q* ...
    ((-2*E_im0*E_re0*L_aqs_2ht - 2*E_im0*E_re0*L_l + R_a*(E_im0^2 - E_re0^2)) ...
    *L_ads_2ht + (-2*E_im0*E_re0*L_l + R_a*(E_im0^2 - E_re0^2))*L_aqs_2ht + ...
    2*(L_l*E_im0 + R_a*E_re0)*(-L_l*E_re0 + R_a*E_im0))*L_1q*L_fd*sin(delta_0r) ...
    + ((-psi_fd0*((E_re0*L_aqs_2ht^2 + (2*L_l*E_re0 + R_a*E_im0)*L_aqs_2ht + ...
    E_im0*L_l*R_a + E_re0*L_l^2 + 2*E_re0*R_a^2)*L_ads_2ht + (L_l*E_re0 - ...
    2*R_a*E_im0)*L_aqs_2ht^2 + (2*L_l^2*E_re0 - 3*L_l*R_a*E_im0 - R_a^2*E_re0) ...
    *L_aqs_2ht - (L_l^2 + R_a^2)*(-L_l*E_re0 + R_a*E_im0))*L_ads_2ht*L_2q - ...
    L_aqs_2ht*psi_2q0*((L_aqs_2ht*E_im0 + L_l*E_im0 + 2*R_a*E_re0)*L_ads_2ht^2 ...
    + ((2*L_l*E_im0 - R_a*E_re0)*L_aqs_2ht + 2*E_im0*L_l^2 - E_im0*R_a^2 + ...
    3*E_re0*L_l*R_a)*L_ads_2ht + (L_l^2*E_im0 - L_l*R_a*E_re0 + 2*R_a^2*E_im0) ...
    *L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*L_fd)*L_1q - L_aqs_2ht ...
    *L_2q*((L_aqs_2ht*E_im0 + L_l*E_im0 + 2*R_a*E_re0)*L_ads_2ht^2 + ...
    ((2*L_l*E_im0 - R_a*E_re0)*L_aqs_2ht + 2*E_im0*L_l^2 - E_im0*R_a^2 ...
    + 3*E_re0*L_l*R_a)*L_ads_2ht + (L_l^2*E_im0 - L_l*R_a*E_re0 + 2*R_a^2 ...
    *E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*psi_1q0 ...
    *L_fd)*L_1d - ((E_re0*L_aqs_2ht^2 + (2*L_l*E_re0 + R_a*E_im0)*L_aqs_2ht ...
    + E_im0*L_l*R_a + E_re0*L_l^2 + 2*E_re0*R_a^2)*L_ads_2ht + (L_l*E_re0 ...
    - 2*R_a*E_im0)*L_aqs_2ht^2 + (2*L_l^2*E_re0 - 3*L_l*R_a*E_im0 - R_a^2 ...
    *E_re0)*L_aqs_2ht - (L_l^2 + R_a^2)*(-L_l*E_re0 + R_a*E_im0))*psi_1d0 ...
    *L_2q*L_ads_2ht*L_1q*L_fd)*cos(delta_0r) - ((L_ads_2ht - L_aqs_2ht) ...
    *L_1d*L_2q*(((E_im0^2 - E_re0^2)*L_aqs_2ht + (E_im0^2 - E_re0^2)*L_l ...
    + 2*E_im0*E_re0*R_a)*L_ads_2ht + ((E_im0^2 - E_re0^2)*L_l + 2*E_im0* ...
    E_re0*R_a)*L_aqs_2ht + (E_im0^2 - E_re0^2)*L_l^2 + 4*E_im0*E_re0*L_l* ...
    R_a + (-E_im0^2 + E_re0^2)*R_a^2)*L_1q*L_fd*sin(delta_0r) + ((psi_fd0 ...
    *L_ads_2ht*((E_im0*L_aqs_2ht^2 + (2*L_l*E_im0 - R_a*E_re0)*L_aqs_2ht ...
    + E_im0*L_l^2 + 2*E_im0*R_a^2 - E_re0*L_l*R_a)*L_ads_2ht + (L_l*E_im0 ...
    + 2*R_a*E_re0)*L_aqs_2ht^2 + (2*L_l^2*E_im0 + 3*L_l*R_a*E_re0 - R_a^2 ...
    *E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*L_2q + 2 ...
    *L_aqs_2ht*((E_im0*R_a - 1/2*E_re0*L_aqs_2ht - 1/2*E_re0*L_l) ...
    *L_ads_2ht^2 + ((-E_im0*R_a/2 - E_re0*L_l)*L_aqs_2ht + (3*E_im0*L_l*R_a) ...
    /2 - E_re0*L_l^2 + E_re0*R_a^2/2)*L_ads_2ht + (-1/2*E_im0*L_l*R_a - 1/2 ...
    *E_re0*L_l^2 - E_re0*R_a^2)*L_aqs_2ht + ((L_l^2 + R_a^2)*(-L_l*E_re0 + ...
    R_a*E_im0))/2)*psi_2q0*L_fd)*L_1q + 2*L_aqs_2ht*L_2q*((E_im0*R_a - 1/2* ...
    E_re0*L_aqs_2ht - 1/2*E_re0*L_l)*L_ads_2ht^2 + ((-E_im0*R_a/2 - E_re0* ...
    L_l)*L_aqs_2ht + (3*E_im0*L_l*R_a)/2 - E_re0*L_l^2 + E_re0*R_a^2/2)* ...
    L_ads_2ht + (-1/2*E_im0*L_l*R_a - 1/2*E_re0*L_l^2 - E_re0*R_a^2)*L_aqs_2ht ...
    + ((L_l^2 + R_a^2)*(-L_l*E_re0 + R_a*E_im0))/2)*psi_1q0*L_fd)*L_1d + ...
    psi_1d0*L_2q*L_ads_2ht*L_1q*((E_im0*L_aqs_2ht^2 + (2*L_l*E_im0 - R_a* ...
    E_re0)*L_aqs_2ht + E_im0*L_l^2 + 2*E_im0*R_a^2 - E_re0*L_l*R_a)*L_ads_2ht ...
    + (L_l*E_im0 + 2*R_a*E_re0)*L_aqs_2ht^2 + (2*L_l^2*E_im0 + 3*L_l*R_a*E_re0 ...
    - R_a^2*E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*L_fd) ...
    *sin(delta_0r))/(2*L_1d*L_2q*((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l ...
    + L_l^2 + R_a^2)^2*H*L_1q*L_fd);

    a_13 = -L_ads_2ht*(-L_1d*L_2q*L_1q*(E_re0*R_a^3+2*(L_ads_2ht-L_aqs_2ht/2 ...
    + L_l/2)*E_im0*R_a^2 - E_re0*(L_aqs_2ht + L_l)*(-2*L_aqs_2ht + ...
    L_ads_2ht - L_l)*R_a + E_im0*(L_aqs_2ht + L_l)^2*(L_ads_2ht + L_l)) ...
    *L_fd*cos(delta_0r)/2 + ((-R_a^3*E_im0 + 2*E_re0*(L_ads_2ht - ...
    L_aqs_2ht/2 + L_l/2)*R_a^2 + E_im0*(L_aqs_2ht + L_l)*(-2*L_aqs_2ht ...
    + L_ads_2ht - L_l)*R_a + E_re0*(L_aqs_2ht + L_l)^2*(L_ads_2ht + L_l)) ...
    *L_1d*L_2q*L_1q*L_fd*sin(delta_0r))/2 + R_a*(((R_a^2 + (L_aqs_2ht + ...
    L_l)^2)*L_ads_2ht*(L_1d*psi_fd0 + L_fd*psi_1d0)*L_2q + psi_2q0*L_1d ...
    *L_fd*L_aqs_2ht*R_a*(L_ads_2ht - L_aqs_2ht))*L_1q + psi_1q0*L_1d*L_2q ...
    *L_fd*L_aqs_2ht*R_a*(L_ads_2ht - L_aqs_2ht)))/(L_1d*L_2q*((L_ads_2ht ...
    + L_l)*(L_aqs_2ht + L_l) + R_a^2)^2*H*L_1q*L_fd^2);

    a_14 = -L_ads_2ht*(-L_1q*L_fd*L_2q*L_1d*(R_a^3*E_re0 + 2*E_im0 ...
    *(L_ads_2ht - L_aqs_2ht/2 + L_l/2)*R_a^2 - E_re0* ...
    (L_aqs_2ht + L_l)*(-2*L_aqs_2ht + L_ads_2ht - L_l) ...
    *R_a + E_im0*(L_aqs_2ht + L_l)^2*(L_ads_2ht + L_l)) ...
    *cos(delta_0r)/2 + L_1q*L_fd*(-E_im0*R_a^3 + 2 ...
    *E_re0*(L_ads_2ht - L_aqs_2ht/2 + L_l/2)*R_a^2 ...
    + E_im0*(L_aqs_2ht + L_l)*(-2*L_aqs_2ht + L_ads_2ht ...
    - L_l)*R_a + E_re0*(L_aqs_2ht + L_l)^2*(L_ads_2ht ...
    + L_l))*L_2q*L_1d*sin(delta_0r)/2 + (((L_1d*psi_fd0 ...
    + L_fd*psi_1d0)*L_ads_2ht*(R_a^2 + (L_aqs_2ht ...
    + L_l)^2)*L_2q + psi_2q0*L_1d*L_fd*L_aqs_2ht*R_a ...
    *(L_ads_2ht - L_aqs_2ht))*L_1q + psi_1q0*L_1d*L_2q ...
    *L_fd*L_aqs_2ht*R_a*(L_ads_2ht - L_aqs_2ht))*R_a)/(L_1q*L_fd...
    *((L_ads_2ht + L_l)*(L_aqs_2ht + L_l) + R_a^2)^2*H*L_2q*L_1d^2);

    a_15 = -(-L_1q*L_fd*(E_im0*R_a^3/2 + E_re0*(-2*L_aqs_2ht + ...
    L_ads_2ht - L_l)*R_a^2/2 + E_im0*(L_ads_2ht + L_l)*(L_ads_2ht ...
    - L_aqs_2ht/2 + L_l/2)*R_a - E_re0*(L_ads_2ht + L_l)^2*(L_aqs_2ht ...
    + L_l)/2)*L_2q*L_1d*cos(delta_0r) + L_1q*L_fd*(R_a^3*E_re0 - ...
    E_im0*(-2*L_aqs_2ht + L_ads_2ht - L_l)*R_a^2 + 2*(L_ads_2ht + ...
    L_l)*E_re0*(L_ads_2ht - L_aqs_2ht/2 + L_l/2)*R_a + E_im0* ...
    (L_ads_2ht + L_l)^2*(L_aqs_2ht + L_l))*L_2q*L_1d*sin(delta_0r) ...
    /2 + (((L_1q*psi_2q0 + L_2q*psi_1q0)*(R_a^2 + (L_ads_2ht ...
    + L_l)^2)*L_aqs_2ht*L_fd + psi_fd0*L_1q*L_2q*L_ads_2ht*R_a ...
    *(L_ads_2ht - L_aqs_2ht))*L_1d + psi_1d0*L_1q*L_2q*L_fd* ...
    L_ads_2ht*R_a*(L_ads_2ht - L_aqs_2ht))*R_a)*L_aqs_2ht/(L_1q^2 ...
    *L_fd*((L_ads_2ht + L_l)*(L_aqs_2ht + L_l) + R_a^2)^2*H*L_2q*L_1d);

    a_16 = -(-L_1q*L_fd*(E_im0*R_a^3/2 + E_re0*(-2*L_aqs_2ht + ...
    L_ads_2ht - L_l)*R_a^2/2 + E_im0*(L_ads_2ht + L_l)*(L_ads_2ht ...
    - L_aqs_2ht/2 + L_l/2)*R_a - E_re0*(L_ads_2ht + L_l)^2*(L_aqs_2ht ...
    + L_l)/2)*L_2q*L_1d*cos(delta_0r) + L_1q*L_fd*(R_a^3*E_re0 - E_im0 ...
    *(-2*L_aqs_2ht + L_ads_2ht - L_l)*R_a^2 + 2*(L_ads_2ht + L_l)*E_re0 ...
    *(L_ads_2ht - L_aqs_2ht/2 + L_l/2)*R_a + E_im0*(L_ads_2ht + L_l)^2 ...
    *(L_aqs_2ht + L_l))*L_2q*L_1d*sin(delta_0r)/2 + (((L_1q*psi_2q0 + ...
    L_2q*psi_1q0)*(R_a^2 + (L_ads_2ht + L_l)^2)*L_aqs_2ht*L_fd + psi_fd0 ...
    *L_1q*L_2q*L_ads_2ht*R_a*(L_ads_2ht - L_aqs_2ht))*L_1d + psi_1d0*L_1q ...
    *L_2q*L_fd*L_ads_2ht*R_a*(L_ads_2ht - L_aqs_2ht))*R_a)*L_aqs_2ht/...
    (L_1q*L_fd*((L_ads_2ht + L_l)*(L_aqs_2ht + L_l) + R_a^2)^2*H*L_2q^2*L_1d);

    b_11 = (L_1q*L_fd*L_2q*(E_im0*(L_aqs_2ht + L_l)*L_ads_2ht + ...
    (L_l*E_im0 + 2*R_a*E_re0)*L_aqs_2ht + E_im0*L_l^2 - E_im0*R_a^2 ...
    + 2*E_re0*L_l*R_a)*(L_ads_2ht - L_aqs_2ht)*L_1d*cos(delta_0r)^2 ...
    + (2*L_1q*L_fd*L_2q*((-L_aqs_2ht*E_re0 - L_l*E_re0 + R_a*E_im0) ...
    *L_ads_2ht + (-L_l*E_re0 + R_a*E_im0)*L_aqs_2ht + 2*E_im0*L_l*R_a ...
    - E_re0*L_l^2 + E_re0*R_a^2)*(L_ads_2ht - L_aqs_2ht)*L_1d* ...
    sin(delta_0r) + ((-psi_fd0*((L_aqs_2ht + L_l)*L_ads_2ht - 2* ...
    L_aqs_2ht^2 - 3*L_aqs_2ht*L_l - L_l^2 - R_a^2)*L_ads_2ht*R_a*L_2q ...
    - L_fd*((L_aqs_2ht + L_l)*L_ads_2ht^2 + (2*L_aqs_2ht*L_l + 2*L_l^2 ...
    - R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)*L_aqs_2ht + L_l^3 + ...
    L_l*R_a^2)*psi_2q0*L_aqs_2ht)*L_1q - psi_1q0*L_fd*L_2q*((L_aqs_2ht ...
    + L_l)*L_ads_2ht^2 + (2*L_aqs_2ht*L_l + 2*L_l^2 - R_a^2)*L_ads_2ht ...
    + (L_l^2 + 2*R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_aqs_2ht)*L_1d ...
    - L_1q*L_fd*((L_aqs_2ht + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 - 3* ...
    L_aqs_2ht*L_l - L_l^2 - R_a^2)*L_2q*psi_1d0*L_ads_2ht*R_a)* ...
    cos(delta_0r) - (L_1q*L_fd*((L_aqs_2ht*E_im0 + L_l*E_im0 + 2*R_a ...
    *E_re0)*L_ads_2ht + E_im0*L_aqs_2ht*L_l + E_im0*L_l^2 - E_im0*R_a^2 ...
    + 2*E_re0*L_l*R_a)*L_2q*(L_ads_2ht - L_aqs_2ht)*L_1d*sin(delta_0r) ...
    + ((psi_fd0*L_ads_2ht*((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + 2* ...
    R_a^2)*L_ads_2ht + L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht + ...
    L_l^3 + L_l*R_a^2)*L_2q + 2*L_fd*(L_ads_2ht^2 + (-L_aqs_2ht/2 + (3* ...
    L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + R_a^2/2)*psi_2q0* ...
    L_aqs_2ht*R_a)*L_1q + 2*psi_1q0*L_fd*(L_ads_2ht^2 + (-L_aqs_2ht/2 ...
    + (3*L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + R_a^2/2)*L_2q ...
    *L_aqs_2ht*R_a)*L_1d + L_1q*L_fd*L_2q*psi_1d0*L_ads_2ht* ...
    ((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + 2*R_a^2)*L_ads_2ht + ...
    L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)) ...
    *sin(delta_0r))/(2*L_1q*L_fd*((L_aqs_2ht + L_l)*L_ads_2ht + ...
    L_aqs_2ht*L_l + L_l^2 + R_a^2)^2*H*L_2q*L_1d);

    b_12 = (-2*L_1q*L_fd*L_2q*((E_im0*R_a - 1/2*E_re0*L_aqs_2ht - ...
    1/2*E_re0*L_l)*L_ads_2ht + E_im0*L_l*R_a - E_re0*L_aqs_2ht*L_l/2 ...
    - E_re0*L_l^2/2 + E_re0*R_a^2/2)*(L_ads_2ht - L_aqs_2ht)*L_1d* ...
    cos(delta_0r)^2 + (2*L_1q*L_fd*L_2q*(L_ads_2ht - L_aqs_2ht)* ...
    ((L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)*L_ads_2ht + (L_l*E_im0 ...
    + R_a*E_re0)*L_aqs_2ht + E_im0*L_l^2 - E_im0*R_a^2 + 2*E_re0*L_l*R_a) ...
    *L_1d*sin(delta_0r) + ((psi_fd0*L_ads_2ht*((L_aqs_2ht^2 + 2*L_aqs_2ht ...
    *L_l + L_l^2 + 2*R_a^2)*L_ads_2ht + L_aqs_2ht^2*L_l + (2*L_l^2 - ...
    R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_2q + 2*L_fd*(L_ads_2ht^2 + ...
    (-L_aqs_2ht/2 + (3*L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + ...
    R_a^2/2)*psi_2q0*L_aqs_2ht*R_a)*L_1q + 2*psi_1q0*L_fd*(L_ads_2ht^2 + ...
    (-L_aqs_2ht/2 + (3*L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + ...
    R_a^2/2)*L_2q*L_aqs_2ht*R_a)*L_1d + L_1q*L_fd*L_2q*psi_1d0*L_ads_2ht ...
    *((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + 2*R_a^2)*L_ads_2ht + ...
    L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)) ...
    *cos(delta_0r) - (-2*L_1q*(-E_re0*(L_aqs_2ht + L_l)*L_ads_2ht/2 + ...
    (E_im0*R_a - E_re0*L_l/2)*L_aqs_2ht + E_im0*L_l*R_a - E_re0*L_l^2/2 ...
    + E_re0*R_a^2/2)*L_fd*L_2q*(L_ads_2ht - L_aqs_2ht)*L_1d*sin(delta_0r) ...
    + ((psi_fd0*((L_aqs_2ht + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 - 3* ...
    L_aqs_2ht*L_l - L_l^2 - R_a^2)*L_ads_2ht*R_a*L_2q + L_fd*((L_aqs_2ht ...
    + L_l)*L_ads_2ht^2 + (2*L_aqs_2ht*L_l + 2*L_l^2 - R_a^2)*L_ads_2ht ...
    + (L_l^2 + 2*R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)*psi_2q0*L_aqs_2ht) ...
    *L_1q + psi_1q0*L_fd*L_2q*((L_aqs_2ht + L_l)*L_ads_2ht^2 + (2* ...
    L_aqs_2ht*L_l + 2*L_l^2 - R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)*L_aqs_2ht ...
    + L_l^3 + L_l*R_a^2)*L_aqs_2ht)*L_1d + L_1q*L_fd*((L_aqs_2ht + L_l) ...
    *L_ads_2ht - 2*L_aqs_2ht^2 - 3*L_aqs_2ht*L_l - L_l^2 - R_a^2)*L_2q ...
    *psi_1d0*L_ads_2ht*R_a)*sin(delta_0r))/(2*L_1q*L_fd*((L_aqs_2ht + ...
    L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)^2*H*L_2q*L_1d);




    a_21 = omega_0;
    a_22 = 0; a_23 = 0; a_24 = 0; a_25 = 0; a_26 = 0; b_21 = 0; b_22 = 0;

    
    a_31 = 0;
    a_32 = L_ads_2ht*omega_0*((L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)...
        *cos(delta_0r) - sin(delta_0r)*(L_aqs_2ht*E_re0 + L_l*E_re0 ...
        - R_a*E_im0))*R_fd/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_fd);
    a_33 = -((L_fd - L_ads_2ht)*L_l^2 + ((L_fd - L_aqs_2ht)*L_ads_2ht +...
        L_fd*L_aqs_2ht)*L_l + (L_aqs_2ht*L_fd - R_a^2)*L_ads_2ht + L_fd*...
        R_a^2)*omega_0*R_fd/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_fd^2);
    a_34 = omega_0*R_fd*L_ads_2ht*(L_aqs_2ht*L_l + L_l^2 + R_a^2)/(L_1d*...
        (L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*L_ads_2ht + R_a^2)*L_fd);
    a_35 = omega_0*R_fd*L_ads_2ht*R_a*L_aqs_2ht/(L_1q*((L_aqs_2ht + L_l)*...
        L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_fd);
    a_36 = omega_0*R_fd*L_ads_2ht*R_a*L_aqs_2ht/(L_2q*((L_aqs_2ht + L_l)*...
        L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_fd);

    b_31 = L_ads_2ht*((L_aqs_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))...
        *omega_0*R_fd/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*...
        L_ads_2ht + R_a^2)*L_fd);
    b_32 = L_ads_2ht*omega_0*((L_aqs_2ht + L_l)*sin(delta_0r) - R_a*...
        cos(delta_0r))*R_fd/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_fd);

    a_41 = 0;
    a_42 = L_ads_2ht*omega_0*((L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)...
        *cos(delta_0r) - sin(delta_0r)*(L_aqs_2ht*E_re0 + L_l*E_re0 -...
        R_a*E_im0))*R_1d/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1d);
    a_43 = omega_0*R_1d*L_ads_2ht*(L_aqs_2ht*L_l + L_l^2 + R_a^2)/(L_1d*...
        (L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*...
        L_ads_2ht + R_a^2)*L_fd);
    a_44 = -((L_1d - L_ads_2ht)*L_l^2 + ((L_1d - L_aqs_2ht)*L_ads_2ht +...
        L_1d*L_aqs_2ht)*L_l + (L_1d*L_aqs_2ht - R_a^2)*L_ads_2ht + L_1d*...
        R_a^2)*omega_0*R_1d/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1d^2);
    a_45 = omega_0*R_1d*L_ads_2ht*R_a*L_aqs_2ht/(L_1d*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_1q);
    a_46 = omega_0*R_1d*L_ads_2ht*R_a*L_aqs_2ht/(L_1d*((L_aqs_2ht + L_l)*...
        L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_2q);

    b_41 = L_ads_2ht*((L_aqs_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))*...
        omega_0*R_1d/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*...
        L_ads_2ht + R_a^2)*L_1d);
    b_42 = L_ads_2ht*omega_0*((L_aqs_2ht + L_l)*sin(delta_0r) - R_a*...
        cos(delta_0r))*R_1d/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1d);

    a_51 = 0;
    a_52 = -omega_0*((L_ads_2ht*E_re0 + L_l*E_re0 - R_a*E_im0)*cos(delta_0r)...
        + sin(delta_0r)*(L_ads_2ht*E_im0 + L_l*E_im0 + R_a*E_re0))*L_aqs_2ht...
        *R_1q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*L_ads_2ht ...
        + R_a^2)*L_1q);
    a_53 = -omega_0*R_1q*L_ads_2ht*R_a*L_aqs_2ht/(L_1q*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_fd);
    a_54 = -omega_0*R_1q*L_ads_2ht*R_a*L_aqs_2ht/(L_1d*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_1q);
    a_55 = -((L_1q - L_aqs_2ht)*L_l^2 + ((L_1q - L_ads_2ht)*L_aqs_2ht +...
        L_1q*L_ads_2ht)*L_l + (L_1q*L_ads_2ht - R_a^2)*L_aqs_2ht + L_1q*...
        R_a^2)*omega_0*R_1q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1q^2);
    a_56 = omega_0*R_1q*L_aqs_2ht*(L_ads_2ht*L_l + L_l^2 + R_a^2)/...
        (L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*L_ads_2ht...
        + R_a^2)*L_2q);

    b_51 = -omega_0*L_aqs_2ht*((L_ads_2ht + L_l)*sin(delta_0r) - R_a*...
        cos(delta_0r))*R_1q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1q);
    b_52 = omega_0*L_aqs_2ht*((L_ads_2ht + L_l)*cos(delta_0r) + R_a*...
        sin(delta_0r))*R_1q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_1q);

    a_61 = 0;
    a_62 = -omega_0*((L_ads_2ht*E_re0 + L_l*E_re0 - R_a*E_im0)*cos(delta_0r)...
        + sin(delta_0r)*(L_ads_2ht*E_im0 + L_l*E_im0 + R_a*E_re0))*L_aqs_2ht...
        *R_2q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*L_ads_2ht...
        + R_a^2)*L_2q);
    a_63 = -omega_0*R_2q*L_ads_2ht*R_a*L_aqs_2ht/(L_2q*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_fd);
    a_64 = -omega_0*R_2q*L_ads_2ht*R_a*L_aqs_2ht/(L_1d*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)*L_2q);
    a_65 = omega_0*R_2q*L_aqs_2ht*(L_ads_2ht*L_l + L_l^2 + R_a^2)/...
        (L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_aqs_2ht*L_ads_2ht...
        + R_a^2)*L_2q);
    a_66 = -((L_2q - L_aqs_2ht)*L_l^2 + ((L_2q - L_ads_2ht)*L_aqs_2ht +...
        L_2q*L_ads_2ht)*L_l + (L_2q*L_ads_2ht - R_a^2)*L_aqs_2ht + L_2q*...
        R_a^2)*omega_0*R_2q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_2q^2);

    b_61 = -omega_0*L_aqs_2ht*((L_ads_2ht + L_l)*sin(delta_0r) - R_a*...
        cos(delta_0r))*R_2q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_2q);
    b_62 = omega_0*L_aqs_2ht*((L_ads_2ht + L_l)*cos(delta_0r) + R_a*...
        sin(delta_0r))*R_2q/((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
        L_aqs_2ht*L_ads_2ht + R_a^2)*L_2q);
    
    
    c_11 = 0;
    c_12 = (L_1d*L_1q*L_2q*L_fd*E_re0*(L_ads_2ht - L_aqs_2ht)*...
        cos(delta_0r)^2 + (2*L_1d*L_1q*L_2q*L_fd*E_im0*(L_ads_2ht -...
        L_aqs_2ht)*sin(delta_0r) + ((psi_fd0*L_ads_2ht*(L_aqs_2ht +...
        L_l)*L_2q - psi_2q0*L_aqs_2ht*R_a*L_fd)*L_1q - psi_1q0*...
        L_aqs_2ht*R_a*L_2q*L_fd)*L_1d + L_ads_2ht*L_1q*L_2q*L_fd*psi_1d0...
        *(L_aqs_2ht + L_l))*cos(delta_0r) - (L_1d*L_1q*L_2q*L_fd*E_re0*...
        (L_ads_2ht - L_aqs_2ht)*sin(delta_0r) + ((psi_fd0*L_ads_2ht*R_a*...
        L_2q + psi_2q0*L_aqs_2ht*L_fd*(L_ads_2ht + L_l))*L_1q + psi_1q0*...
        L_aqs_2ht*L_2q*L_fd*(L_ads_2ht + L_l))*L_1d + L_1q*L_2q*L_fd*R_a...
        *psi_1d0*L_ads_2ht)*sin(delta_0r))/(L_1q*L_fd*((L_aqs_2ht + L_l)...
        *L_ads_2ht + L_l^2 + L_l*L_aqs_2ht + R_a^2)*L_2q*L_1d);
    c_13 = ((L_aqs_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_ads_2ht/...
        ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 +...
        L_ads_2ht*L_aqs_2ht)*L_fd);
    c_14 = ((L_aqs_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_ads_2ht/...
        ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_1d);
    c_15 = L_aqs_2ht*((L_ads_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))/...
        ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_1q);
    c_16 = L_aqs_2ht*((L_ads_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))/...
        ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_2q);
    
    d_11 =  (-cos(delta_0r)^2*R_a + sin(delta_0r)*(L_ads_2ht - L_aqs_2ht)...
        *cos(delta_0r) - sin(delta_0r)^2*R_a)/((L_aqs_2ht + L_l)*L_ads_2ht...
        + L_l^2 + L_l*L_aqs_2ht + R_a^2);
    d_12 = ((-L_l - L_ads_2ht)*cos(delta_0r)^2 - sin(delta_0r)^2*(L_aqs_2ht...
        + L_l))/(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 +...
        L_ads_2ht*L_aqs_2ht);
    
    
    c_21 = 0;
    c_22 = (-L_1d*L_1q*L_2q*L_fd*E_im0*(L_ads_2ht - L_aqs_2ht)*...
        cos(delta_0r)^2 + (2*L_1d*L_1q*L_2q*L_fd*E_re0*(L_ads_2ht - ...
        L_aqs_2ht)*sin(delta_0r) + ((psi_fd0*L_ads_2ht*R_a*L_2q + psi_2q0...
        *L_aqs_2ht*L_fd*(L_ads_2ht + L_l))*L_1q + psi_1q0*L_aqs_2ht*L_2q...
        *L_fd*(L_ads_2ht + L_l))*L_1d + L_1q*L_2q*L_fd*R_a*psi_1d0*...
        L_ads_2ht)*cos(delta_0r) + (L_1d*L_1q*L_2q*L_fd*E_im0*(L_ads_2ht...
        - L_aqs_2ht)*sin(delta_0r) + ((psi_fd0*L_ads_2ht*(L_aqs_2ht + L_l)...
        *L_2q - psi_2q0*L_aqs_2ht*R_a*L_fd)*L_1q - psi_1q0*L_aqs_2ht*R_a...
        *L_2q*L_fd)*L_1d + L_ads_2ht*L_1q*L_2q*L_fd*psi_1d0*(L_aqs_2ht +...
        L_l))*sin(delta_0r))/(L_1q*L_fd*((L_aqs_2ht + L_l)*L_ads_2ht + ...
        L_l^2 + L_l*L_aqs_2ht + R_a^2)*L_2q*L_1d);
    c_23 = -((L_aqs_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_ads_2ht...
        /((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_fd);
    c_24 = -((L_aqs_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_ads_2ht...
        /((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_1d);
    c_25 = L_aqs_2ht*((L_ads_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))...
        /((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_1q);
    c_26 = L_aqs_2ht*((L_ads_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))...
        /((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht)*L_2q);
    
    d_21 = ((L_aqs_2ht + L_l)*cos(delta_0r)^2 + sin(delta_0r)^2*(L_ads_2ht...
        + L_l))/(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht...
        *L_aqs_2ht);
    d_22 = (-cos(delta_0r)^2*R_a - sin(delta_0r)*(L_ads_2ht - L_aqs_2ht)*...
        cos(delta_0r) - sin(delta_0r)^2*R_a)/((L_aqs_2ht + L_l)*L_ads_2ht...
        + L_l^2 + L_l*L_aqs_2ht + R_a^2);

    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% Квадратичные коэффициенты:
a_18 = 1/(4*H*L_1q*L_1d*L_2q*((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l...
    + L_l^2 + R_a^2)^2*L_fd)*(2*L_1q*L_1d*L_2q*((-2*E_im0*E_re0*L_aqs_2ht -...
    2*E_im0*E_re0*L_l + R_a*(E_im0^2 - E_re0^2))*L_ads_2ht + (-2*E_im0*E_re0...
    *L_l + R_a*(E_im0^2 - E_re0^2))*L_aqs_2ht + 2*(L_l*E_im0 + R_a*E_re0)*...
    (-L_l*E_re0 + R_a*E_im0))*(-L_aqs_2ht + L_ads_2ht)*L_fd*cos(delta_0r)^2 ...
    + (-4*L_1q*(((E_im0^2 - E_re0^2)*L_aqs_2ht + (E_im0^2 - E_re0^2)*L_l + ...
    2*E_im0*E_re0*R_a)*L_ads_2ht + ((E_im0^2 - E_re0^2)*L_l + 2*E_im0*E_re0...
    *R_a)*L_aqs_2ht + (E_im0^2 - E_re0^2)*L_l^2 + 4*E_im0*E_re0*L_l*R_a + ...
    (-E_im0^2 + E_re0^2)*R_a^2)*L_1d*L_2q*(-L_aqs_2ht + L_ads_2ht)*L_fd*...
    sin(delta_0r) + ((-((E_im0*L_aqs_2ht^2 + (2*L_l*E_im0 - R_a*E_re0)*...
    L_aqs_2ht + E_im0*L_l^2 + 2*E_im0*R_a^2 - E_re0*L_l*R_a)*L_ads_2ht +...
    (L_l*E_im0 + 2*R_a*E_re0)*L_aqs_2ht^2 + (2*L_l^2*E_im0 + 3*L_l*R_a*...
    E_re0 - R_a^2*E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))...
    *L_ads_2ht*psi_fd0*L_2q - 2*psi_2q0*L_fd*((E_im0*R_a - 1/2*E_re0*L_aqs_2ht...
    - 1/2*E_re0*L_l)*L_ads_2ht^2 + ((-E_im0*R_a/2 - E_re0*L_l)*L_aqs_2ht +...
    (3*E_im0*L_l*R_a)/2 - E_re0*L_l^2 + E_re0*R_a^2/2)*L_ads_2ht + (-1/2*...
    E_im0*L_l*R_a - 1/2*E_re0*L_l^2 - E_re0*R_a^2)*L_aqs_2ht + ((L_l^2 +...
    R_a^2)*(-L_l*E_re0 + R_a*E_im0))/2)*L_aqs_2ht)*L_1q - 2*psi_1q0*L_2q*...
    L_fd*((E_im0*R_a - 1/2*E_re0*L_aqs_2ht - 1/2*E_re0*L_l)*L_ads_2ht^2 +...
    ((-E_im0*R_a/2 - E_re0*L_l)*L_aqs_2ht + (3*E_im0*L_l*R_a)/2 - E_re0*...
    L_l^2 + E_re0*R_a^2/2)*L_ads_2ht + (-1/2*E_im0*L_l*R_a - 1/2*E_re0*L_l^2 ...
    - E_re0*R_a^2)*L_aqs_2ht + ((L_l^2 + R_a^2)*(-L_l*E_re0 + R_a*E_im0))/2)...
    *L_aqs_2ht)*L_1d - ((E_im0*L_aqs_2ht^2 + (2*L_l*E_im0 - R_a*E_re0)*...
    L_aqs_2ht + E_im0*L_l^2 + 2*E_im0*R_a^2 - E_re0*L_l*R_a)*L_ads_2ht + ...
    (L_l*E_im0 + 2*R_a*E_re0)*L_aqs_2ht^2 + (2*L_l^2*E_im0 + 3*L_l*R_a*E_re0...
    - R_a^2*E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*L_1q...
    *L_ads_2ht*L_2q*psi_1d0*L_fd)*cos(delta_0r) + (-2*L_1q*L_1d*L_2q*((-2*...
    E_im0*E_re0*L_aqs_2ht - 2*E_im0*E_re0*L_l + R_a*(E_im0^2 - E_re0^2))*...
    L_ads_2ht + (-2*E_im0*E_re0*L_l + R_a*(E_im0^2 - E_re0^2))*L_aqs_2ht +...
    2*(L_l*E_im0 + R_a*E_re0)*(-L_l*E_re0 + R_a*E_im0))*(-L_aqs_2ht + L_ads_2ht)...
    *L_fd*sin(delta_0r) + ((L_ads_2ht*((E_re0*L_aqs_2ht^2 + (2*L_l*E_re0 +...
    R_a*E_im0)*L_aqs_2ht + E_im0*L_l*R_a + E_re0*L_l^2 + 2*E_re0*R_a^2)*...
    L_ads_2ht + (L_l*E_re0 - 2*R_a*E_im0)*L_aqs_2ht^2 + (2*L_l^2*E_re0 - 3*...
    L_l*R_a*E_im0 - R_a^2*E_re0)*L_aqs_2ht - (L_l^2 + R_a^2)*(-L_l*E_re0 +...
    R_a*E_im0))*psi_fd0*L_2q + psi_2q0*((L_aqs_2ht*E_im0 + L_l*E_im0 + 2*R_a...
    *E_re0)*L_ads_2ht^2 + ((2*L_l*E_im0 - R_a*E_re0)*L_aqs_2ht + 2*E_im0*L_l^2 ...
    - E_im0*R_a^2 + 3*E_re0*L_l*R_a)*L_ads_2ht + (L_l^2*E_im0 - L_l*R_a*E_re0...
    + 2*R_a^2*E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))*L_fd...
    *L_aqs_2ht)*L_1q + psi_1q0*((L_aqs_2ht*E_im0 + L_l*E_im0 + 2*R_a*E_re0)*...
    L_ads_2ht^2 + ((2*L_l*E_im0 - R_a*E_re0)*L_aqs_2ht + 2*E_im0*L_l^2 - ...
    E_im0*R_a^2 + 3*E_re0*L_l*R_a)*L_ads_2ht + (L_l^2*E_im0 - L_l*R_a*E_re0...
    + 2*R_a^2*E_im0)*L_aqs_2ht + (L_l^2 + R_a^2)*(L_l*E_im0 + R_a*E_re0))...
    *L_2q*L_fd*L_aqs_2ht)*L_1d + L_1q*L_ads_2ht*((E_re0*L_aqs_2ht^2 + (2*...
    L_l*E_re0 + R_a*E_im0)*L_aqs_2ht + E_im0*L_l*R_a + E_re0*L_l^2 + 2*E_re0...
    *R_a^2)*L_ads_2ht + (L_l*E_re0 - 2*R_a*E_im0)*L_aqs_2ht^2 + (2*L_l^2*E_re0...
    - 3*L_l*R_a*E_im0 - R_a^2*E_re0)*L_aqs_2ht - (L_l^2 + R_a^2)*(-L_l*E_re0...
    + R_a*E_im0))*L_2q*psi_1d0*L_fd)*sin(delta_0r));

a_19 =-1/(2*H*L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2)*(L_ads_2ht*((L_l^3*E_re0 + (-E_im0*R_a + E_re0...
    *(L_ads_2ht + 2*L_aqs_2ht))*L_l^2 + (E_re0*R_a^2 + E_im0*(L_ads_2ht...
    - 3*L_aqs_2ht)*R_a + 2*E_re0*L_aqs_2ht*(L_ads_2ht + L_aqs_2ht/2))*...
    L_l - R_a^3*E_im0 + 2*(L_ads_2ht - L_aqs_2ht/2)*E_re0*R_a^2 + L_aqs_2ht...
    *E_im0*(L_ads_2ht - 2*L_aqs_2ht)*R_a + L_ads_2ht*L_aqs_2ht^2*E_re0)*...
    cos(delta_0r) + (L_l^3*E_im0 + (R_a*E_re0 + E_im0*(L_ads_2ht + 2*L_aqs_2ht))...
    *L_l^2 + (E_im0*R_a^2 - E_re0*(L_ads_2ht - 3*L_aqs_2ht)*R_a + 2*E_im0*...
    L_aqs_2ht*(L_ads_2ht + L_aqs_2ht/2))*L_l + R_a^3*E_re0 + 2*E_im0*(L_ads_2ht...
    - L_aqs_2ht/2)*R_a^2 - L_aqs_2ht*E_re0*(L_ads_2ht - 2*L_aqs_2ht)*R_a +...
    L_ads_2ht*L_aqs_2ht^2*E_im0)*sin(delta_0r)));

a_1_10 = -1/(2*H*L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2)*(L_ads_2ht*((L_l^3*E_re0 + (-E_im0*R_a + E_re0*...
    (L_ads_2ht + 2*L_aqs_2ht))*L_l^2 + (E_re0*R_a^2 + E_im0*(L_ads_2ht - ...
    3*L_aqs_2ht)*R_a + 2*E_re0*L_aqs_2ht*(L_ads_2ht + L_aqs_2ht/2))*L_l - ...
    R_a^3*E_im0 + 2*(L_ads_2ht - L_aqs_2ht/2)*E_re0*R_a^2 + L_aqs_2ht*E_im0...
    *(L_ads_2ht - 2*L_aqs_2ht)*R_a + L_ads_2ht*L_aqs_2ht^2*E_re0)*cos(delta_0r)...
    + (L_l^3*E_im0 + (R_a*E_re0 + E_im0*(L_ads_2ht + 2*L_aqs_2ht))*L_l^2 +...
    (E_im0*R_a^2 - E_re0*(L_ads_2ht - 3*L_aqs_2ht)*R_a + 2*E_im0*L_aqs_2ht*...
    (L_ads_2ht + L_aqs_2ht/2))*L_l + R_a^3*E_re0 + 2*E_im0*(L_ads_2ht -...
    L_aqs_2ht/2)*R_a^2 - L_aqs_2ht*E_re0*(L_ads_2ht - 2*L_aqs_2ht)*R_a +...
    L_ads_2ht*L_aqs_2ht^2*E_im0)*sin(delta_0r)));

a_1_11 = -1/(2*H*L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2)*(L_aqs_2ht*((L_l^3*E_im0 + (R_a*E_re0 + 2*E_im0*...
    (L_ads_2ht + L_aqs_2ht/2))*L_l^2 + (E_im0*R_a^2 + 3*E_re0*(L_ads_2ht -...
    L_aqs_2ht/3)*R_a + L_ads_2ht*E_im0*(L_ads_2ht + 2*L_aqs_2ht))*L_l + R_a^3*...
    E_re0 - E_im0*(L_ads_2ht - 2*L_aqs_2ht)*R_a^2 + 2*(L_ads_2ht - L_aqs_2ht/2)...
    *L_ads_2ht*E_re0*R_a + L_ads_2ht^2*L_aqs_2ht*E_im0)*cos(delta_0r) - ...
    (L_l^3*E_re0 + (-E_im0*R_a + 2*E_re0*(L_ads_2ht + L_aqs_2ht/2))*L_l^2 ...
    + (E_re0*R_a^2 - 3*E_im0*(L_ads_2ht - L_aqs_2ht/3)*R_a + L_ads_2ht*E_re0...
    *(L_ads_2ht + 2*L_aqs_2ht))*L_l - R_a^3*E_im0 - E_re0*(L_ads_2ht - 2*...
    L_aqs_2ht)*R_a^2 - 2*(L_ads_2ht - L_aqs_2ht/2)*L_ads_2ht*E_im0*R_a + ...
    L_ads_2ht^2*L_aqs_2ht*E_re0)*sin(delta_0r)));

a_1_12 = -1/(2*H*L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2)*(L_aqs_2ht*((L_l^3*E_im0 + (R_a*E_re0 + 2*E_im0*...
    (L_ads_2ht + L_aqs_2ht/2))*L_l^2 + (E_im0*R_a^2 + 3*E_re0*(L_ads_2ht -...
    L_aqs_2ht/3)*R_a + L_ads_2ht*E_im0*(L_ads_2ht + 2*L_aqs_2ht))*L_l +...
    R_a^3*E_re0 - E_im0*(L_ads_2ht - 2*L_aqs_2ht)*R_a^2 + 2*(L_ads_2ht -...
    L_aqs_2ht/2)*L_ads_2ht*E_re0*R_a + L_ads_2ht^2*L_aqs_2ht*E_im0)*cos(delta_0r)...
    - (L_l^3*E_re0 + (-E_im0*R_a + 2*E_re0*(L_ads_2ht + L_aqs_2ht/2))*L_l^2 +...
    (E_re0*R_a^2 - 3*E_im0*(L_ads_2ht - L_aqs_2ht/3)*R_a + L_ads_2ht*E_re0...
    *(L_ads_2ht + 2*L_aqs_2ht))*L_l - R_a^3*E_im0 - E_re0*(L_ads_2ht - ...
    2*L_aqs_2ht)*R_a^2 - 2*(L_ads_2ht - L_aqs_2ht/2)*L_ads_2ht*E_im0*R_a ...
    + L_ads_2ht^2*L_aqs_2ht*E_re0)*sin(delta_0r)));

a_1_15 = -R_a*L_ads_2ht^2*(L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + R_a^2)/...
    (2*H*L_fd^2*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_1_16 = -R_a*L_ads_2ht^2*(L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + R_a^2)/...
    (H*L_fd*L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_1_17 = -L_ads_2ht*L_aqs_2ht*R_a^2*(-L_aqs_2ht + L_ads_2ht)/(H*L_fd*L_1q*...
    ((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)^2);

a_1_18 = -L_ads_2ht*L_aqs_2ht*R_a^2*(-L_aqs_2ht + L_ads_2ht)/(H*L_fd*L_2q*...
    ((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)^2);

a_1_22 = -R_a*L_ads_2ht^2*(L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + R_a^2)...
    /(2*H*L_1d^2*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_1_23 = -L_ads_2ht*L_aqs_2ht*R_a^2*(-L_aqs_2ht + L_ads_2ht)/(H*L_1q*L_1d*...
    ((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)^2);

a_1_24 = -L_ads_2ht*L_aqs_2ht*R_a^2*(-L_aqs_2ht + L_ads_2ht)/(H*L_2q*L_1d*...
    ((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 + R_a^2)^2);

a_1_29 = -R_a*L_aqs_2ht^2*(L_ads_2ht^2 + 2*L_ads_2ht*L_l + L_l^2 + R_a^2)...
    /(2*H*L_1q^2*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_1_30 = -R_a*L_aqs_2ht^2*(L_ads_2ht^2 + 2*L_ads_2ht*L_l + L_l^2 + R_a^2)/...
    (H*L_2q*L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_1_36 = -R_a*L_aqs_2ht^2*(L_ads_2ht^2 + 2*L_ads_2ht*L_l + L_l^2 + R_a^2)/...
    (2*H*L_2q^2*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2)^2);

a_3_8 = -L_ads_2ht*omega_0*R_fd*((L_aqs_2ht*E_re0 + L_l*E_re0 - R_a*E_im0)...
    *cos(delta_0r) + sin(delta_0r)*(L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0))...
    /(2*L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht + ...
    R_a^2));

a_4_8 = -L_ads_2ht*omega_0*R_1d*((L_aqs_2ht*E_re0 + L_l*E_re0 - R_a*E_im0)...
    *cos(delta_0r) + sin(delta_0r)*(L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0))...
    /(2*L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht +...
    R_a^2));

a_5_8 = -(((L_ads_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)*cos(delta_0r) - ...
    sin(delta_0r)*(L_ads_2ht*E_re0 + L_l*E_re0 - R_a*E_im0))*omega_0*R_1q...
    *L_aqs_2ht)/(2*L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));

a_6_8 = -(((L_ads_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)*cos(delta_0r) -...
    sin(delta_0r)*(L_ads_2ht*E_re0 + L_l*E_re0 - R_a*E_im0))*omega_0*R_2q...
    *L_aqs_2ht)/(2*L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));




b_11_2 = -((-L_aqs_2ht + L_ads_2ht)*(-R_a*cos(delta_0r) + sin(delta_0r)*...
    (L_ads_2ht + L_l))*((L_aqs_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r)))...
    /(2*H*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht + R_a^2)^2);

b_12_2 = 1/(2*H*((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 +...
    R_a^2)^2)*((-L_aqs_2ht + L_ads_2ht)*(((L_aqs_2ht + L_l)*L_ads_2ht +...
    L_aqs_2ht*L_l + L_l^2 - R_a^2)*cos(delta_0r)^2 + 2*R_a*sin(delta_0r)*...
    (L_ads_2ht + L_aqs_2ht + 2*L_l)*cos(delta_0r) - sin(delta_0r)^2*...
    ((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*L_l + L_l^2 - R_a^2)));

b_14_2 = ((-L_aqs_2ht + L_ads_2ht)*(-R_a*cos(delta_0r) + sin(delta_0r)*...
    (L_aqs_2ht + L_l))*((L_ads_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r)))...
    /(2*H*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht + R_a^2)^2);

b_13_2 = b_12_2;




h_12 = 1 / (2*H*L_1q*L_1d*L_2q*((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht*...
    L_l + L_l^2 + R_a^2)^2*L_fd)*(2*L_1q*((-L_aqs_2ht*E_re0 - L_l*E_re0 +...
    R_a*E_im0)*L_ads_2ht + (-L_l*E_re0 + R_a*E_im0)*L_aqs_2ht + 2*E_im0*...
    L_l*R_a - E_re0*L_l^2 + E_re0*R_a^2)*L_1d*L_2q*(-L_aqs_2ht + L_ads_2ht)...
    *L_fd*cos(delta_0r)^2 + (-4*L_1q*L_1d*((L_aqs_2ht*E_im0 + L_l*E_im0 +...
    R_a*E_re0)*L_ads_2ht + (L_l*E_im0 + R_a*E_re0)*L_aqs_2ht + E_im0*L_l^2 -...
    E_im0*R_a^2 + 2*E_re0*L_l*R_a)*L_2q*(-L_aqs_2ht + L_ads_2ht)*L_fd*...
    sin(delta_0r) + ((-L_ads_2ht*psi_fd0*((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l...
    + L_l^2 + 2*R_a^2)*L_ads_2ht + L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*...
    L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_2q - 2*psi_2q0*R_a*(L_ads_2ht^2 + ...
    (-L_aqs_2ht/2 + (3*L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + R_a^2/2)...
    *L_fd*L_aqs_2ht)*L_1q - 2*psi_1q0*R_a*L_2q*(L_ads_2ht^2 + (-L_aqs_2ht/2 +...
    (3*L_l)/2)*L_ads_2ht - L_aqs_2ht*L_l/2 + L_l^2/2 + R_a^2/2)*L_fd*L_aqs_2ht)...
    *L_1d - L_1q*L_ads_2ht*L_2q*psi_1d0*L_fd*((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l ...
    + L_l^2 + 2*R_a^2)*L_ads_2ht + L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht ...
    + L_l^3 + L_l*R_a^2))*cos(delta_0r) + sin(delta_0r)*(-2*L_1q*((-L_aqs_2ht...
    *E_re0 - L_l*E_re0 + R_a*E_im0)*L_ads_2ht + (-L_l*E_re0 + R_a*E_im0)...
    *L_aqs_2ht + 2*E_im0*L_l*R_a - E_re0*L_l^2 + E_re0*R_a^2)*L_1d*L_2q*...
    (-L_aqs_2ht + L_ads_2ht)*L_fd*sin(delta_0r) + ((L_ads_2ht*R_a*psi_fd0*...
    ((L_aqs_2ht + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 - 3*L_aqs_2ht*L_l - L_l^2 ...
    - R_a^2)*L_2q + ((L_aqs_2ht + L_l)*L_ads_2ht^2 + (2*L_aqs_2ht*L_l +...
    2*L_l^2 - R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)*L_aqs_2ht + L_l^3 + L_l*...
    R_a^2)*psi_2q0*L_fd*L_aqs_2ht)*L_1q + psi_1q0*((L_aqs_2ht + L_l)*L_ads_2ht^2 ...
    + (2*L_aqs_2ht*L_l + 2*L_l^2 - R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)...
    *L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_2q*L_fd*L_aqs_2ht)*L_1d + L_1q*L_ads_2ht...
    *R_a*L_2q*psi_1d0*L_fd*((L_aqs_2ht + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 - ...
    3*L_aqs_2ht*L_l - L_l^2 - R_a^2)));

h_13 = -(((L_l^3 + (L_ads_2ht + 2*L_aqs_2ht)*L_l^2 + (2*L_ads_2ht*L_aqs_2ht...
    + L_aqs_2ht^2 + R_a^2)*L_l + L_ads_2ht*L_aqs_2ht^2 + 2*L_ads_2ht*R_a^2 ...
    - L_aqs_2ht*R_a^2)*sin(delta_0r) + (-L_l^2 + (L_ads_2ht - 3*L_aqs_2ht)*...
    L_l + L_ads_2ht*L_aqs_2ht - 2*L_aqs_2ht^2 - R_a^2)*R_a*cos(delta_0r))*...
    L_ads_2ht)/(2*H*L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2);

h_14 = -L_ads_2ht / (2*H*L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
    L_ads_2ht*L_aqs_2ht + R_a^2)^2)*((L_l^3 + (L_ads_2ht + 2*L_aqs_2ht)...
    *L_l^2 + (2*L_ads_2ht*L_aqs_2ht + L_aqs_2ht^2 + R_a^2)*L_l + L_ads_2ht...
    *L_aqs_2ht^2 + 2*L_ads_2ht*R_a^2 - L_aqs_2ht*R_a^2)*sin(delta_0r) +...
    (-L_l^2 + (L_ads_2ht - 3*L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht - ...
    2*L_aqs_2ht^2 - R_a^2)*R_a*cos(delta_0r));

h_15 = - 1 / (2*H*L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2)*(L_aqs_2ht*((L_l^3 + (2*L_ads_2ht + L_aqs_2ht)*...
    L_l^2 + (L_ads_2ht^2 + 2*L_ads_2ht*L_aqs_2ht + R_a^2)*L_l + L_ads_2ht^2*...
    L_aqs_2ht - L_ads_2ht*R_a^2 + 2*L_aqs_2ht*R_a^2)*cos(delta_0r) + 2*...
    R_a*sin(delta_0r)*(L_l^2/2 + ((3*L_ads_2ht)/2 - L_aqs_2ht/2)*L_l + ...
    L_ads_2ht^2 - L_ads_2ht*L_aqs_2ht/2 + R_a^2/2)));

h_16 = -1 / (2*H*L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2) * (L_aqs_2ht*((L_l^3 + (2*L_ads_2ht + L_aqs_2ht)...
    *L_l^2 + (L_ads_2ht^2 + 2*L_ads_2ht*L_aqs_2ht + R_a^2)*L_l + L_ads_2ht^2*...
    L_aqs_2ht - L_ads_2ht*R_a^2 + 2*L_aqs_2ht*R_a^2)*cos(delta_0r) + 2*R_a...
    *sin(delta_0r)*(L_l^2/2 + ((3*L_ads_2ht)/2 - L_aqs_2ht/2)*L_l +...
    L_ads_2ht^2 - L_ads_2ht*L_aqs_2ht/2 + R_a^2/2)));

h_18 = 1 / (2*H*L_1q*L_1d*L_2q*((L_aqs_2ht + L_l)*L_ads_2ht + L_aqs_2ht...
    *L_l + L_l^2 + R_a^2)^2*L_fd) * (2*L_1q*L_1d*((L_aqs_2ht*E_im0 + L_l...
    *E_im0 + R_a*E_re0)*L_ads_2ht + (L_l*E_im0 + R_a*E_re0)*L_aqs_2ht +...
    E_im0*L_l^2 - E_im0*R_a^2 + 2*E_re0*L_l*R_a)*L_2q*(-L_aqs_2ht +...
    L_ads_2ht)*L_fd*cos(delta_0r)^2 + (4*L_1q*((-L_aqs_2ht*E_re0 - L_l*...
    E_re0 + R_a*E_im0)*L_ads_2ht + (-L_l*E_re0 + R_a*E_im0)*L_aqs_2ht +...
    2*E_im0*L_l*R_a - E_re0*L_l^2 + E_re0*R_a^2)*L_1d*L_2q*(-L_aqs_2ht +...
    L_ads_2ht)*L_fd*sin(delta_0r) + ((-L_ads_2ht*R_a*psi_fd0*((L_aqs_2ht...
    + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 - 3*L_aqs_2ht*L_l - L_l^2 - R_a^2)*...
    L_2q - ((L_aqs_2ht + L_l)*L_ads_2ht^2 + (2*L_aqs_2ht*L_l + 2*L_l^2 -...
    R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)*...
    psi_2q0*L_fd*L_aqs_2ht)*L_1q - psi_1q0*((L_aqs_2ht + L_l)*L_ads_2ht^2 ...
    + (2*L_aqs_2ht*L_l + 2*L_l^2 - R_a^2)*L_ads_2ht + (L_l^2 + 2*R_a^2)*...
    L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_2q*L_fd*L_aqs_2ht)*L_1d - L_1q*...
    L_ads_2ht*R_a*L_2q*psi_1d0*L_fd*((L_aqs_2ht + L_l)*L_ads_2ht - 2*L_aqs_2ht^2 ...
    - 3*L_aqs_2ht*L_l - L_l^2 - R_a^2))*cos(delta_0r) - sin(delta_0r)*(2*...
    L_1q*L_1d*((L_aqs_2ht*E_im0 + L_l*E_im0 + R_a*E_re0)*L_ads_2ht + (L_l...
    *E_im0 + R_a*E_re0)*L_aqs_2ht + E_im0*L_l^2 - E_im0*R_a^2 + 2*E_re0*L_l...
    *R_a)*L_2q*(-L_aqs_2ht + L_ads_2ht)*L_fd*sin(delta_0r) + ((L_ads_2ht*...
    psi_fd0*((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + 2*R_a^2)*L_ads_2ht +...
    L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)*L_2q...
    + 2*psi_2q0*R_a*(L_ads_2ht^2 + (-L_aqs_2ht/2 + (3*L_l)/2)*L_ads_2ht -...
    L_aqs_2ht*L_l/2 + L_l^2/2 + R_a^2/2)*L_fd*L_aqs_2ht)*L_1q + 2*psi_1q0...
    *R_a*L_2q*(L_ads_2ht^2 + (-L_aqs_2ht/2 + (3*L_l)/2)*L_ads_2ht - L_aqs_2ht...
    *L_l/2 + L_l^2/2 + R_a^2/2)*L_fd*L_aqs_2ht)*L_1d + L_1q*L_ads_2ht*L_2q*...
    psi_1d0*L_fd*((L_aqs_2ht^2 + 2*L_aqs_2ht*L_l + L_l^2 + 2*R_a^2)*L_ads_2ht...
    + L_aqs_2ht^2*L_l + (2*L_l^2 - R_a^2)*L_aqs_2ht + L_l^3 + L_l*R_a^2)));

h_19 = 1 / (2*H*L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2) * (L_ads_2ht*((L_l^3 + (L_ads_2ht + 2*L_aqs_2ht)...
    *L_l^2 + (2*L_ads_2ht*L_aqs_2ht + L_aqs_2ht^2 + R_a^2)*L_l + L_ads_2ht*...
    L_aqs_2ht^2 + 2*L_ads_2ht*R_a^2 - L_aqs_2ht*R_a^2)*cos(delta_0r) - ...
    (-L_l^2 + (L_ads_2ht - 3*L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht - 2*L_aqs_2ht^2 ...
    - R_a^2)*R_a*sin(delta_0r)));

h_1_10 = 1 / (2*H*L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2)^2) * (L_ads_2ht*((L_l^3 + (L_ads_2ht + 2*L_aqs_2ht)*...
    L_l^2 + (2*L_ads_2ht*L_aqs_2ht + L_aqs_2ht^2 + R_a^2)*L_l + L_ads_2ht*...
    L_aqs_2ht^2 + 2*L_ads_2ht*R_a^2 - L_aqs_2ht*R_a^2)*cos(delta_0r) - ...
    (-L_l^2 + (L_ads_2ht - 3*L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht - 2*L_aqs_2ht^2 ...
    - R_a^2)*R_a*sin(delta_0r)));

h_1_11 = - L_aqs_2ht / (2*H*L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l +...
    L_ads_2ht*L_aqs_2ht + R_a^2)^2)*((L_l^3 + (2*L_ads_2ht + L_aqs_2ht)...
    *L_l^2 + (L_ads_2ht^2 + 2*L_ads_2ht*L_aqs_2ht + R_a^2)*L_l + L_ads_2ht^2*...
    L_aqs_2ht - L_ads_2ht*R_a^2 + 2*L_aqs_2ht*R_a^2)*sin(delta_0r) - 2*R_a*...
    cos(delta_0r)*(L_l^2/2 + ((3*L_ads_2ht)/2 - L_aqs_2ht/2)*L_l + L_ads_2ht^2 ...
    - L_ads_2ht*L_aqs_2ht/2 + R_a^2/2));

h_1_12 = -L_aqs_2ht / (2*H*L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + ...
    L_ads_2ht*L_aqs_2ht + R_a^2)^2)*((L_l^3 + (2*L_ads_2ht + L_aqs_2ht)*...
    L_l^2 + (L_ads_2ht^2 + 2*L_ads_2ht*L_aqs_2ht + R_a^2)*L_l + L_ads_2ht^2 ...
*L_aqs_2ht - L_ads_2ht*R_a^2 + 2*L_aqs_2ht*R_a^2)*sin(delta_0r) - 2*R_a...
*cos(delta_0r)*(L_l^2/2 + ((3*L_ads_2ht)/2 - L_aqs_2ht/2)*L_l + L_ads_2ht^2 ...
- L_ads_2ht*L_aqs_2ht/2 + R_a^2/2));

h_32 = -L_ads_2ht*omega_0*(-R_a*cos(delta_0r) + sin(delta_0r)*(L_aqs_2ht...
    + L_l))*R_fd/(L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));

h_38 = ((L_aqs_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))*L_ads_2ht*...
    omega_0*R_fd/(L_fd*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));

h_42 = -L_ads_2ht*omega_0*(-R_a*cos(delta_0r) + sin(delta_0r)*(L_aqs_2ht...
    + L_l))*R_1d/(L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));

h_48 = ((L_aqs_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))*L_ads_2ht*...
    omega_0*R_1d/(L_1d*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*...
    L_aqs_2ht + R_a^2));

h_52 = -((L_ads_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))*omega_0*R_1q...
    *L_aqs_2ht/(L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2));

h_58 = -omega_0*(-R_a*cos(delta_0r) + sin(delta_0r)*(L_ads_2ht + L_l))*R_1q...
    *L_aqs_2ht/(L_1q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2));

h_62 = -((L_ads_2ht + L_l)*cos(delta_0r) + R_a*sin(delta_0r))*omega_0*R_2q...
    *L_aqs_2ht/(L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2));

h_68 = -omega_0*(-R_a*cos(delta_0r) + sin(delta_0r)*(L_ads_2ht + L_l))*R_2q...
    *L_aqs_2ht/(L_2q*(L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + L_ads_2ht*L_aqs_2ht...
    + R_a^2));
    


c_18 = (2*L_1d*L_1q*L_2q*L_fd*E_im0*(L_ads_2ht - L_aqs_2ht)*cos(delta_0r)^2 ...
    + (-4*L_1d*L_1q*L_2q*L_fd*E_re0*(L_ads_2ht - L_aqs_2ht)*sin(delta_0r) ...
    + ((-psi_fd0*L_ads_2ht*R_a*L_2q - psi_2q0*L_aqs_2ht*L_fd*(L_ads_2ht +...
    L_l))*L_1q - psi_1q0*L_aqs_2ht*L_2q*L_fd*(L_ads_2ht + L_l))*L_1d - ...
    L_ads_2ht*R_a*L_1q*L_2q*L_fd*psi_1d0)*cos(delta_0r) - (2*L_1d*L_1q*L_2q...
    *L_fd*E_im0*(L_ads_2ht - L_aqs_2ht)*sin(delta_0r) + ((psi_fd0*L_ads_2ht...
    *(L_aqs_2ht + L_l)*L_2q - psi_2q0*L_aqs_2ht*R_a*L_fd)*L_1q - psi_1q0*...
    L_aqs_2ht*R_a*L_2q*L_fd)*L_1d + L_ads_2ht*L_1q*L_2q*L_fd*psi_1d0*...
    (L_aqs_2ht + L_l))*sin(delta_0r))/(2*L_fd*L_1q*((L_aqs_2ht + L_l)*...
    L_ads_2ht + L_l^2 + L_l*L_aqs_2ht + R_a^2)*L_2q*L_1d);
c_19 = ((L_aqs_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_ads_2ht/((L_l^2 ...
    + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_fd);
c_1_10 = ((L_aqs_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_ads_2ht/((L_l^2 ...
    + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_1d);
c_1_11 = -((L_ads_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_aqs_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_1q);
c_1_12 = -((L_ads_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_aqs_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_2q);


c_28 = 1 / (2*L_fd*L_1q*((L_aqs_2ht + L_l)*L_ads_2ht + L_l^2 + L_l*L_aqs_2ht...
    + R_a^2)*L_2q*L_1d)*(2*L_1d*L_1q*L_2q*L_fd*E_re0*(L_ads_2ht - L_aqs_2ht)...
    *cos(delta_0r)^2 + (4*E_im0*L_1d*L_1q*L_2q*L_fd*(L_ads_2ht - L_aqs_2ht)...
    *sin(delta_0r) + ((psi_fd0*L_ads_2ht*(L_aqs_2ht + L_l)*L_2q - psi_2q0*...
    L_aqs_2ht*R_a*L_fd)*L_1q - psi_1q0*L_aqs_2ht*R_a*L_2q*L_fd)*L_1d + ...
    L_ads_2ht*L_1q*L_2q*L_fd*psi_1d0*(L_aqs_2ht + L_l))*cos(delta_0r) - ...
    (2*E_re0*L_1d*L_1q*L_2q*L_fd*(L_ads_2ht - L_aqs_2ht)*sin(delta_0r) + ...
    ((psi_fd0*L_ads_2ht*R_a*L_2q + psi_2q0*L_aqs_2ht*L_fd*(L_ads_2ht + L_l))...
    *L_1q + psi_1q0*L_aqs_2ht*L_2q*L_fd*(L_ads_2ht + L_l))*L_1d + L_ads_2ht...
    *R_a*L_1q*L_2q*L_fd*psi_1d0)*sin(delta_0r));
c_29 = ((L_aqs_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_ads_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_fd);
c_2_10 = ((L_aqs_2ht + L_l)*sin(delta_0r) + R_a*cos(delta_0r))*L_ads_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_1d);
c_2_11 = ((L_ads_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_aqs_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_1q);
c_2_12 = ((L_ads_2ht + L_l)*cos(delta_0r) - R_a*sin(delta_0r))*L_aqs_2ht/...
    ((L_l^2 + (L_ads_2ht + L_aqs_2ht)*L_l + R_a^2 + L_ads_2ht*L_aqs_2ht)*L_2q);



s_12 = (cos(delta_0r) - sin(delta_0r))*(cos(delta_0r) + sin(delta_0r))*...
    (L_ads_2ht - L_aqs_2ht)/((L_aqs_2ht + L_l)*L_ads_2ht + L_l^2 + L_l*...
    L_aqs_2ht + R_a^2);
s_18 = 2*sin(delta_0r)*cos(delta_0r)*(L_ads_2ht - L_aqs_2ht)/((L_aqs_2ht +...
    L_l)*L_ads_2ht + L_l^2 + L_l*L_aqs_2ht + R_a^2);
s_22 = 2*sin(delta_0r)*cos(delta_0r)*(L_ads_2ht - L_aqs_2ht)/((L_aqs_2ht + ...
    L_l)*L_ads_2ht + L_l^2 + L_l*L_aqs_2ht + R_a^2);
s_28 = -(cos(delta_0r) - sin(delta_0r))*(cos(delta_0r) + sin(delta_0r))*...
    (L_ads_2ht - L_aqs_2ht)/((L_aqs_2ht + L_l)*L_ads_2ht + L_l^2 + L_l*...
    L_aqs_2ht + R_a^2);


    % Матрицы линейной части:

    A = [   a_11 a_12 a_13 a_14 a_15 a_16;
            a_21 a_22 a_23 a_24 a_25 a_26;
            a_31 a_32 a_33 a_34 a_35 a_36;
            a_41 a_42 a_43 a_44 a_45 a_46;
            a_51 a_52 a_53 a_54 a_55 a_56;
            a_61 a_62 a_63 a_64 a_65 a_66];
    B = [   b_11 b_12;
            b_21 b_22;
            b_31 b_32;
            b_41 b_42;
            b_51 b_52;
            b_61 b_62];
    C = [   c_11 c_12 c_13 c_14 c_15 c_16;
            c_21 c_22 c_23 c_24 c_25 c_26];
    D = [   d_11 d_12;
            d_21 d_22];

    % Матрицы квадратичной части:
    A_2 = zeros(6,36);
    A_2(1,8:12) = [a_18 a_19 a_1_10 a_1_11 a_1_12];
    A_2(1,14:18) = [0 a_1_15 a_1_16 a_1_17 a_1_18];
    A_2(1,20:24) = [0 0 a_1_22 a_1_23 a_1_24];
    A_2(1,26:30) = [0 0 0 a_1_29 a_1_30];
    A_2(1,32:36) = [0 0 0 0 a_1_36];
    A_2(3:6,8) = [a_3_8; a_4_8; a_5_8; a_6_8];
    
    B_2 = zeros(6,4);
    B_2 (1,:) = [b_11_2 b_12_2 b_13_2 b_14_2];
    
    H_ = zeros(6,12);
    H_(1,2:6) = [h_12 h_13 h_14 h_15 h_16];
    H_(1,8:12) = [h_18 h_19 h_1_10 h_1_11 h_1_12];
    H_(3:6,2) = [h_32; h_42; h_52; h_62];
    H_(3:6,8) = [h_38; h_48; h_58; h_68];
    
    C_2 = zeros(2,36);
    C_2(:,8:12) = [ c_18 c_19 c_1_10 c_1_11 c_1_12;
                    c_28 c_29 c_2_10 c_2_11 c_2_12];
                
    S = zeros(2,12);
    S(:,2) = [ s_12; s_22];
    S(:,8) = [ s_18; s_28];
        
    % Ненулевые коэффициенты матрицы управления
    b11 = 1 / (2 * H);
    b32 = omega_0 * R_fd / L_ad;
    
    
    % Формирует структуру результатов линеаризации генератора № ngen:
    
    bilin_gen = setfield(bilin_gen,name_field,'E_re0',E_re0);
    bilin_gen = setfield(bilin_gen,name_field,'E_im0',E_im0);
    bilin_gen = setfield(bilin_gen,name_field,'e_d0',e_d0);
    bilin_gen = setfield(bilin_gen,name_field,'e_q0',e_q0);
    bilin_gen = setfield(bilin_gen,name_field,'i_d0',i_d0);
    bilin_gen = setfield(bilin_gen,name_field,'i_q0',i_q0);
    bilin_gen = setfield(bilin_gen,name_field,'i_fd0',i_fd0);
    bilin_gen = setfield(bilin_gen,name_field,'psi_fd0',psi_fd0);
    bilin_gen = setfield(bilin_gen,name_field,'psi_1d0',psi_1d0);
    bilin_gen = setfield(bilin_gen,name_field,'psi_1q0',psi_1q0);
    bilin_gen = setfield(bilin_gen,name_field,'psi_2q0',psi_2q0);
    bilin_gen = setfield(bilin_gen,name_field,'delta_0',delta_0);
    bilin_gen = setfield(bilin_gen,name_field,'A',A);
    bilin_gen = setfield(bilin_gen,name_field,'B',B);
    bilin_gen = setfield(bilin_gen,name_field,'C',C);
    bilin_gen = setfield(bilin_gen,name_field,'D',D);
    bilin_gen = setfield(bilin_gen,name_field,'A2',A_2);
    bilin_gen = setfield(bilin_gen,name_field,'B2',B_2);
    bilin_gen = setfield(bilin_gen,name_field,'C2',C_2);
    bilin_gen = setfield(bilin_gen,name_field,'H',H_);
    bilin_gen = setfield(bilin_gen,name_field,'S',S);
    
    bilin_gen = setfield(bilin_gen,name_field,'for_control_matrix'...
        ,'b11',b11);
    bilin_gen = setfield(bilin_gen,name_field,'for_control_matrix'...
        ,'b32',b32);
    bilin_gen = setfield(bilin_gen,name_field,'E_fd0',E_fd0);
end


end
%=====================END of LINEARIZE of GENERATOR========================


%===========================LINEARIZE of LOAD==============================
function [lin_load] = flin_load(n_gen,n_load,power_flow,n,m)

E0 = power_flow.V0_l;
P0 = power_flow.P0_l;
Q0 = power_flow.Q0_l;
lin_load = struct;
for nl = 1:n_load
    name_field = string(['D_L' num2str(nl)]);
    
    E_re = real(E0(nl+n_gen));
    E_im = imag(E0(nl+n_gen));
    Et = abs(E0(nl+n_gen));

    Di(1,1) =   P0(nl+n_gen)*((m-2.0)*E_re^2 /Et^2 + 1.0) / Et^2 ...
               + Q0(nl+n_gen)*((n-2.0)*E_re*E_im/Et^2) / Et^2;

    Di(1,2) =   Q0(nl+n_gen)*((n-2.0)*E_im^2 /Et^2 + 1.0) / Et^2 ...
               + P0(nl+n_gen)*((m-2.0)*E_re*E_im/Et^2) / Et^2;

    Di(2,1) = - Q0(nl+n_gen)*((n-2.0)*E_re^2 /Et^2 + 1.0) / Et^2 ...
               + P0(nl+n_gen)*((m-2.0)*E_re*E_im/Et^2) / Et^2;

    Di(2,2) =   P0(nl+n_gen)*((m-2.0)*E_im^2 /Et^2 + 1.0) / Et^2 ...
               - Q0(nl+n_gen)*((n-2.0)*E_re*E_im/Et^2) / Et^2;
    
    lin_load = setfield(lin_load,name_field,Di);
end
end
%========================END of LINEARIZE of LOAD==========================


%===============CONSTRUCTION of DIAGONAL MATRICES==========================
function sys_mat = fsys_mat(n_gen, n_load,bilin_gen,lin_load)

ns = size(bilin_gen.G1.A,1); % количество переменных состояния в линейной моделе генератора
lin2mac = 1/9; % коэфф перевода из системы линий в систему машин

Ad = zeros(ns * n_gen);
Bd = zeros(ns * n_gen, 2 * (n_gen+n_load));
Cd = zeros(2 * (n_gen+n_load), ns * n_gen);
Dd = zeros(2 * (n_gen+n_load));
Ad_2 = zeros(ns * n_gen, ns * ns * n_gen);
Bd_2 = zeros(ns * n_gen, 4 * (n_gen+n_load));
Cd_2 = zeros(2 * (n_gen+n_load), ns * ns * n_gen);
Hd = zeros(ns * n_gen, 2 * ns * n_gen);
Sd = zeros(2 * (n_gen+n_load), 2 * ns * n_gen);

for k = 1:n_gen               
  name_field = string(['G' num2str(k)]);
  Ad((ns*k-ns+1):ns*k,(ns*k-ns+1):ns*k) = getfield(bilin_gen,name_field,'A');  
  Bd((ns*k-ns+1):ns*k,(2*k-1):2*k) = getfield(bilin_gen,name_field,'B');
  Cd((2*k-1):2*k,(ns*k-ns+1):ns*k) = getfield(bilin_gen,name_field,'C');
  Dd((2*k-1):2*k,(2*k-1):2*k) = getfield(bilin_gen,name_field,'D');
  Ad_2((ns*k-ns+1):ns*k,(ns^2*k-ns^2+1):ns^2*k) = getfield(bilin_gen,name_field,'A2');
  Bd_2((ns*k-ns+1):ns*k,(4*k-3):4*k) = getfield(bilin_gen,name_field,'B2');
  Cd_2((2*k-1):2*k,(ns^2*k-ns^2+1):ns^2*k) = getfield(bilin_gen,name_field,'C2');
  Hd((ns*k-ns+1):ns*k, (2*ns*k-2*ns+1):2*ns*k) = getfield(bilin_gen,name_field,'H');
  Sd((2*k-1):2*k, (2*ns*k-2*ns+1):2*ns*k) = getfield(bilin_gen,name_field,'S');
end

n = 0;
for k = n_gen+1 : n_gen+n_load
    n = n + 1;
    name_field = string(['D_L' num2str(n)]);
    Di = getfield(lin_load,name_field) * lin2mac;
    Dd((2*k-1):2*k,(2*k-1):2*k) = Di(1:2,1:2);
end
 
 sys_mat.Ad = Ad;
 sys_mat.Bd = Bd;
 sys_mat.Cd = Cd;
 sys_mat.Dd = Dd;
 sys_mat.Ad_2 = Ad_2;
 sys_mat.Bd_2 = Bd_2;
 sys_mat.Cd_2 = Cd_2;
 sys_mat.Hd = Hd;
 sys_mat.Sd = Sd;

 % Матрица входов
 B1 = zeros(ns*4,8);
 B1(1,1) = bilin_gen.G1.for_control_matrix.b11;
 B1(3,2) = bilin_gen.G1.for_control_matrix.b32;
 B1(7,3) = bilin_gen.G2.for_control_matrix.b11;
 B1(9,4) = bilin_gen.G2.for_control_matrix.b32;
 B1(13,5) = bilin_gen.G3.for_control_matrix.b11;
 B1(15,6) = bilin_gen.G3.for_control_matrix.b32;
 B1(19,7) = bilin_gen.G4.for_control_matrix.b11;
 B1(21,8) = bilin_gen.G4.for_control_matrix.b32;
 
 sys_mat.B1 = B1;
end
%========================END of CONSTRUCTION===============================